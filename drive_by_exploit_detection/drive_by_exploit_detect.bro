redef record Conn::Info += {
  orig_cc: string &optional &log;
  resp_cc: string &optional &log;
};

global mime_to_ext: table[string] of string = {
	["text/html"] = "html",
	["text/x-php"] = "php",
	["text/plain"] = "txt",
	["text/javascript"] = "js",
	["application/javascript"] = "js",
};

function do_log(msg : string) 
	{
		print msg;	
	}


event bro_init()
	{
	do_log("Script loaded");
	}

event http_header(c: connection, is_orig: bool, name: string, value: string)
	{
	print fmt("host %s", c$http$host);
	#print fmt("uri %s", c$http$uri);
	local uri: URI = decompose_uri(c$http$uri);	
	do_log(uri$path);
	#print fmt("%s -> %s", c$id$resp_h, original_URI);  
	
	}


event http_request(c: connection, method: string, original_URI: string, unescaped_URI: string, version: string)
	{
	}	

event file_new(f: fa_file)
	{
	
	if(!f?$mime_type)
		{
		return;
		}

	if ( f$mime_type !in mime_to_ext )
		{
		do_log(f$mime_type);
		return;
		}

	local fname = fmt("%s-%s.%s", f$source, f$id, mime_to_ext[f$mime_type]);
	local msg = fmt("Extracting file %s", fname);
	do_log(msg);
	Files::add_analyzer(f, Files::ANALYZER_EXTRACT, [$extract_filename=fname]);
	}


event connection_state_remove(c: connection)
  {
    local orig_loc = lookup_location(c$id$orig_h);
    if ( orig_loc?$country_code )
    	{
    	c$conn$orig_cc = orig_loc$country_code;
  		do_log(orig_loc$country_code);
  		}
    
    local resp_loc = lookup_location(c$id$resp_h);
    if ( resp_loc?$country_code )
    	{
    	c$conn$resp_cc = resp_loc$country_code;
  		do_log(resp_loc$country_code);
  		}
  }